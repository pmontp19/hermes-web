---
import Layout from '../layouts/Layout.astro';
import Header from '../components/Header.astro';
import Hero from '../components/Hero.astro';
import Services from '../components/Services.astro';
import Features from '../components/Features.astro';
import Testimonials from '../components/Testimonials.astro';
import Contact from '../components/Contact.astro';
import Footer from '../components/Footer.astro';
import Pricing from '../components/Pricing.astro';
import BlogPreview from '../components/BlogPreview.astro';

// Construct schema.org data for organization and website
const schemaData = {
  "@context": "https://schema.org",
  "@graph": [
    {
      "@type": "Organization",
      "@id": new URL("#organization", Astro.site).toString(),
      "name": "TranslateHub",
      "url": Astro.site?.toString(),
      "logo": {
        "@type": "ImageObject",
        "url": new URL("/favicon.svg", Astro.site).toString()
      },
      "description": "Professional translation and localization services for businesses worldwide",
      "sameAs": [
        "https://twitter.com/translatehub",
        "https://linkedin.com/company/translatehub"
      ]
    },
    {
      "@type": "WebSite",
      "@id": new URL("#website", Astro.site).toString(),
      "url": Astro.site?.toString(),
      "name": "TranslateHub",
      "publisher": {
        "@id": new URL("#organization", Astro.site).toString()
      },
      "potentialAction": {
        "@type": "SearchAction",
        "target": {
          "@type": "EntryPoint",
          "urlTemplate": new URL("/search?q={search_term_string}", Astro.site).toString()
        },
        "query-input": "required name=search_term_string"
      }
    }
  ]
};
---

<Layout title="TranslateHub - Professional Translation Services">
  <!-- Add JSON-LD Schema -->
  <script type="application/ld+json" set:html={JSON.stringify(schemaData)} />
  <Header />
  <main>
    <div class="fade-in-section"><Hero /></div>
    <div class="fade-in-section"><Features /></div>
    <div class="fade-in-section"><Services /></div>
    <div class="fade-in-section"><Pricing /></div>
    <div class="fade-in-section"><Testimonials /></div>
    <div class="fade-in-section"><BlogPreview /></div>
    <div class="fade-in-section"><Contact /></div>
  </main>
  <Footer />
</Layout>

<style>
  .fade-in-section {
    opacity: 0;
    transform: translateY(20px);
    transition: opacity 0.6s ease-out, transform 0.6s ease-out;
    will-change: opacity, transform;
  }

  .fade-in-section.is-visible {
    opacity: 1;
    transform: translateY(0);
  }
</style>

<script>
  const observerOptions = {
    root: null,
    rootMargin: '0px',
    threshold: 0.15
  };

  const observer = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        entry.target.classList.add('is-visible');
        // Once the animation is complete, we can stop observing the element
        observer.unobserve(entry.target);
      }
    });
  }, observerOptions);

  // Observe all sections
  document.addEventListener('DOMContentLoaded', () => {
    const sections = document.querySelectorAll('.fade-in-section');
    sections.forEach(section => observer.observe(section));
  });
</script>
